name: Web deploy

on:
  push:
    branches: [ "main" ]

jobs:
  dotnet-build:
    name: Dotnet Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
  docker-build:
    name: Docker Build
    needs: dotnet-build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: build docker image
        run: docker build -t youssofkhawaja/blazorappserver:latest -f BlazorAppServer/Dockerfile .
      - name: save docker image
        run: |
             docker save -o BlazorAppServer.tar youssofkhawaja/blazorappserver
             ls -sh
      - name: copy tar via ssh
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          password: ${{ secrets.REMOTE_PASSWORD }}
          port: 22
          source: "BlazorAppServer.tar"
          target: "/opt"
      - name: executing remote ssh commands
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          password: ${{ secrets.REMOTE_PASSWORD }}
          script: |
            docker load -i /opt/BlazorAppServer.tar
            rm /opt/BlazorAppServer.tar
            docker kill BlazorAppServer
            docker system prune -f
            docker run --name BlazorAppServer -p 41187:80 --restart always -v public:/app/wwwroot/public -d youssofkhawaja/blazorappserver:latest
  nginx-setup:
    name: Nginx Setup
    needs: docker-build
    runs-on: ubuntu-latest
    steps:
      - name: executing remote ssh commands
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          password: ${{ secrets.REMOTE_PASSWORD }}
          script: |
                  desired_config='
                  server {
                      listen        80;
                      server_name   blazorappserver(previewtest).com www.blazorappserver(previewtest).com;
                      location / {
                          proxy_pass         http://localhost:41187;
                          proxy_http_version 1.1;
                          proxy_set_header   Upgrade $http_upgrade;
                          proxy_set_header   Connection "upgrade";
                          proxy_set_header   Host $host;
                          proxy_cache_bypass $http_upgrade;
                          proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
                          proxy_set_header   X-Forwarded-Proto $scheme;
                      }
                  }'

                  if [ -f /etc/nginx/sites-available/web-blazorappserver.com ]; then
                      if diff -q <(echo "$desired_config") /etc/nginx/sites-available/web-blazorappserver.com >/dev/null; then
                          echo "File exists and contains the desired configuration. Skipping..."
                      else
                          echo "File exists but doesn't contain the desired configuration. Updating..."
                          echo "$desired_config" | sudo tee /etc/nginx/sites-available/web-blazorappserver.com >/dev/null

                          sudo ln -sf /etc/nginx/sites-available/web-blazorappserver.com /etc/nginx/sites-enabled/
                          sudo systemctl restart nginx
                      fi
                  else
                      echo "File does not exist. Creating..."
                      echo "$desired_config" | sudo tee /etc/nginx/sites-available/web-blazorappserver.com >/dev/null

                      sudo ln -sf /etc/nginx/sites-available/web-blazorappserver.com /etc/nginx/sites-enabled/
                      sudo systemctl restart nginx
                  fi
